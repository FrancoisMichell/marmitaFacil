testing:
  image: node:13.7-alpine

  services:
    - postgres:12-alpine

  stage: test

  cache:
    paths:
      - node_modules/

  script:
    - npm install
    - npm test

  variables:
    POSTGRES_USER: root
    POSTGRES_PASSWORD: root
    POSTGRES_DB: BoilerplateTest
    POSTGRES_HOST_AUTH_METHOD: 'trust'

    HOST: '0.0.0.0'
    PORT: 4000
    NODE_ENV: testing
    APP_NAME: Boilerplate
    ENV_SILENT: 'true'

    APP_URL: http://${HOST}:${PORT}
    APP_KEY: AL3oYyPEUvijLf2vG7kAOGOQ4a7YkkDJX

    DATABASE_CONNECTION: pg
    DATABASE_HOST: postgres
    DATABASE_PORT: 5432
    DATABASE_USER: root
    DATABASE_PASSWORD: root
    DATABASE_DATABASE: BoilerplateTest
    DATABASE_URL: postgres://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DATABASE}
    DATABASE_DEBUG: 'false'

    HASH_DRIVER: bcrypt

deploy-dev:
  image: ruby:2.6.1
  stage: deploy
  script:
    - gem install dpl
    - dpl --provider=heroku --app=adonis-boilerplate-dev --api-key=$HEROKU_DEPLOY_KEY
  only:
    - /develop/

deploy-stag:
  image: ruby:2.6.1
  stage: deploy
  script:
    - gem install dpl
    - dpl --provider=heroku --app=adonis-boilerplate-stag --api-key=$HEROKU_DEPLOY_KEY
  only:
    - /^v([0-9]+)(\.[0-9]+)(\.[0-9]+)$/
